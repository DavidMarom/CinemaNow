{"version":3,"sources":["services/httpService.js","services/moviesService.js","services/showsService.js","cmps/NavBar.jsx","store/actions/movActions.js","store/actions/showActions.js","services/tmdbService.js","history.js","cmps/MovieStrip.jsx","pages/Explore.jsx","cmps/ShowStrip.jsx","pages/Shows.jsx","pages/Movies.jsx","App.js","reportWebVitals.js","store/reducers/movReducer.js","store/reducers/showReducer.js","store/store.jsx","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","mov","movId","moviesService","addMov","getAllMovies","removeMov","show","showId","showsService","addShow","getAllShows","removeShow","NavBar","dispatch","useDispatch","useEffect","allMov","type","allShow","className","to","tmdbService","getMovie","query","createBrowserHistory","MovieStrip","btnAdd","btnRemove","onClick","_mov","history","push","_id","name","id","Explore","useState","update","setUpdate","refresh","searchVal","setSearchVal","Date","now","lastTime","setlastTime","que","setQue","movies","setMovies","then","setTimeout","value","onChange","ev","target","results","map","idx","doRefresh","ShowStrip","title","hall","moment","unix","time","format","Shows","showsInState","useSelector","state","showReducer","Movies","moviesInState","movReducer","App","connect","withRouter","exact","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","filter","_show","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45ec4cb7.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        if (endpoint === 'undefined') { endpoint = '' }\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import { httpService } from './httpService'\r\n\r\nasync function addMov(mov) {\r\n    try {\r\n        const res = await httpService.post(`movie/add`, mov);\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n\r\n    }\r\n}\r\n\r\nasync function getAllMovies() {\r\n    try {\r\n        const res = await httpService.get(`movie/`);\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function removeMov(movId) {\r\n    try {\r\n        const res = await httpService.delete(`movie/${movId}`)\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const moviesService = {\r\n    addMov,\r\n    getAllMovies,\r\n    removeMov\r\n}","import { httpService } from './httpService'\r\n\r\nasync function addShow(show) {\r\n    try {\r\n        const res = await httpService.post(`show/add`, show);\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function getAllShows() {\r\n    try {\r\n        const res = await httpService.get(`show/`);\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function removeShow(showId) {\r\n    try {\r\n        const res = await httpService.delete(`show/${showId}`)\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const showsService = {\r\n    addShow,\r\n    getAllShows,\r\n    removeShow\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadMov } from \"../store/actions/movActions\";\r\nimport { loadShow } from \"../store/actions/showActions\";\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction _NavBar() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMov());\r\n    dispatch(loadShow());\r\n    console.log('nav-bar');\r\n  }, []);\r\n\r\n  // const test = useSelector((state) => state.movReducer.mov);\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"nav-bar ca\">\r\n\r\n      <h1>Cinema Now</h1>\r\n\r\n      <NavLink to=\"/\">\r\n        <p className=\"nav-btn\">Find Movies</p>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/movies\">\r\n        <p className=\"nav-btn\">Our Movies</p>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/shows\">\r\n        <p className=\"nav-btn\">Manage Shows</p>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NavBar = _NavBar\r\n","import { moviesService } from '../../services/moviesService';\r\n\r\nexport function loadMov() {\r\n    return async dispatch => {\r\n        try {\r\n            const allMov = await moviesService.getAllMovies();\r\n            dispatch({ type: 'LOAD_MOV', allMov });\r\n        } catch (err) {\r\n            console.log('SettingsActions: err in getAllMovies', err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function addMov(mov) {\r\n    return async dispatch => {\r\n        try {\r\n            const _mov = await moviesService.addMov(mov);\r\n            dispatch({ type: 'ADD_MOV', _mov })\r\n        } catch (err) {\r\n            console.log('SettingsActions: err in addMov', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function removeMov(movId) {\r\n    return async dispatch => {\r\n        try {\r\n            await moviesService.removeMov(movId);\r\n            dispatch({ type: 'REMOVE_MOV', movId });\r\n        } catch (err) {\r\n            console.log('AnnActions: err in removeMov', err);\r\n        }\r\n    };\r\n}\r\n","import { showsService } from '../../services/showsService';\r\n\r\nexport function loadShow() {\r\n    console.log('action: get all shows');\r\n    return async dispatch => {\r\n        try {\r\n            const allShow = await showsService.getAllShows();\r\n            dispatch({ type: 'LOAD_SHOW', allShow });\r\n        } catch (err) {\r\n            console.log('SettingsActions: err in getAllShows', err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function addShow(show) {\r\n    return async dispatch => {\r\n        try {\r\n            const _show = await showsService.addShow(show);\r\n            dispatch({ type: 'ADD_SHOW', _show })\r\n        } catch (err) {\r\n            console.log('SettingsActions: err in addShow', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeShow(showId) {\r\n    return async dispatch => {\r\n        try {\r\n            await showsService.removeShow(showId);\r\n            dispatch({ type: 'REMOVE_SHOW', showId });\r\n        } catch (err) {\r\n            console.log('AnnActions: err in removeShow', err);\r\n        }\r\n    };\r\n}\r\n","import { httpService } from './httpService'\r\n\r\nfunction getMovie(query) {\r\n    return httpService.get(`tmdb/${query}`);\r\n}\r\n\r\nexport const tmdbService = {\r\n    getMovie\r\n}","import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory()","import React from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMov, removeMov } from '../store/actions/movActions'\r\nimport history from '../history';\r\n\r\nexport const MovieStrip = ({ mov, btnAdd, btnRemove }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"rb movie-strip\">\r\n            <div className=\"ral\">\r\n                <div className=\"add-button-col\">\r\n\r\n                    {/* ADD Button */}\r\n                    {btnAdd ? <button className=\"btn2 lnk-btn\" onClick={() => {\r\n                        dispatch(addMov(mov));\r\n                        history.push(\"/movies\");\r\n                    }\r\n                    }>\r\n                        <i className=\"fas fa-plus\"></i>Add to cinema</button> : null}\r\n\r\n                    {/* REMOVE Button */}\r\n                    {btnRemove ? <button className=\"btn-del lnk-btn\" onClick={() => {\r\n                        dispatch(removeMov(mov._id));\r\n                        history.push(\"/movies\");\r\n                    }\r\n                    }>\r\n                        <i className=\"far fa-trash-alt\"></i>Remove</button> : null}\r\n                </div>\r\n                <p className=\"movie-title\">{mov.name}</p>\r\n            </div>\r\n            <p className=\"movie-id\">id: {mov.id}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tmdbService } from '../services/tmdbService'\r\nimport { MovieStrip } from '../cmps/MovieStrip'\r\n\r\nexport const Explore = () => {\r\n    const [update, setUpdate] = useState(1);\r\n    const refresh = () => {\r\n        setUpdate(update + 1);\r\n        console.log('refresh func activated');\r\n    }\r\n\r\n    const [searchVal, setSearchVal] = useState('matr');\r\n    const [lastTime, setlastTime] = useState(Date.now());\r\n    const [que, setQue] = useState(0);\r\n    const [movies, setMovies] = useState();\r\n\r\n    useEffect(() => { // search field changed (debounce)\r\n        if (searchVal) {\r\n            if ((Date.now() - lastTime) > 2000) { // if slow enough\r\n                tmdbService.getMovie(searchVal).then(res => { setMovies(res) }) // Do API call\r\n                setlastTime(Date.now());\r\n            } else {\r\n                setQue(que + 1);\r\n                setTimeout(function () {\r\n                    if (que === 1 || que < 1) {\r\n                        tmdbService.getMovie(searchVal).then(res => { setMovies(res) }) // Do API call\r\n                        setlastTime(Date.now());\r\n                        setQue(que - 1);\r\n                    }\r\n                }, 1000);\r\n            }\r\n        } // if searchVal\r\n    }, [searchVal]);\r\n\r\n    useEffect(() => {\r\n        // console.log('update');\r\n    }, [update])\r\n\r\n    return (\r\n        <div className=\"page-general\">\r\n            <h2>Explore new movies</h2>\r\n            <div className=\"search-bar ral\">\r\n                <p>Search for new movies: </p>\r\n                <input className=\"input\"\r\n                    value={searchVal}\r\n                    type=\"text\"\r\n                    onChange={ev => { setSearchVal(ev.target.value); }} />\r\n            </div>\r\n\r\n            { movies ?\r\n                movies.results.map((mov, idx) => {\r\n                    return <MovieStrip\r\n                        key={idx}\r\n                        mov={mov}\r\n                        btnAdd={true}\r\n                        btnRemove={false}\r\n                        doRefresh={refresh}\r\n                    />\r\n                }) : null}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n// import { addShow, removeShow } from '../store/actions/showActions'\r\nimport history from '../history';\r\n\r\nexport const ShowStrip = ({ show }) => {\r\n  console.log(show);\r\n  // const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"rb movie-strip\">\r\n\r\n      <p className=\"movie-title\">{show.title}</p>\r\n      <p className=\"movie-title\">Hall: {show.hall}</p>\r\n      <p className=\"movie-title\">{moment.unix(show.time).format('dddd, MMMM Do, YYYY h:mm:ss A')}</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { ShowStrip } from '../cmps/ShowStrip'\r\n\r\nexport const Shows = () => {\r\n    const showsInState = useSelector((state) => state.showReducer.show);\r\n    {console.log(showsInState)}\r\n    return (\r\n        <div className=\"page-general\">\r\n            <div className=\"hor-block\">\r\n                <h1>Shows</h1>\r\n            </div>\r\n\r\n            \r\n            { showsInState ?\r\n                showsInState.map((show, idx) => { return <ShowStrip key={idx} show={show} /> }) : null}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MovieStrip } from '../cmps/MovieStrip'\r\n\r\nexport const Movies = () => {\r\n\r\n    const moviesInState = useSelector((state) => state.movReducer.mov);\r\n\r\n    return (\r\n        <div className=\"page-general\">\r\n            <div className=\"hor-block\">\r\n                <h1>Movies</h1>\r\n                <p>This is our local movie library. Use the items below to create shows</p>\r\n            </div>\r\n            { moviesInState ?\r\n                moviesInState.map((mov, idx) => { return <MovieStrip key={idx} mov={mov} btnAdd={false} btnRemove={true} /> }) : null}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { NavBar } from \"./cmps/NavBar.jsx\";\nimport { Explore } from './pages/Explore';\nimport { Shows } from './pages/Shows';\nimport { Movies } from './pages/Movies';\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\nconst _App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"outter-container\">\n        <div className=\"inner-container\">\n          <NavBar />\n\n          <Switch>\n            <Route exact component={Explore} path={\"/\"} />\n            <Route exact component={Shows} path={\"/shows\"} />\n            <Route exact component={Movies} path={\"/movies\"} />\n\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const App = connect(null, null)(withRouter(_App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    mov: []\r\n};\r\n\r\nexport function movReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'LOAD_MOV':\r\n            return { mov: action.allMov };\r\n\r\n        case 'ADD_MOV':\r\n            return { ...state, mov: [...state.mov, state.mov.map(mov => (action._mov._id === mov._id) ? action._mov : mov)] }\r\n            \r\n        case 'REMOVE_MOV':\r\n            return { ...state, mov: state.mov.filter(mov => mov._id !== action.movId) };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    show: []\r\n};\r\n\r\nexport function showReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'LOAD_SHOW':\r\n            return { show: action.allShow };\r\n\r\n        case 'ADD_SHOW':\r\n            return { ...state, show: [...state.show, state.show.map(show => (action._show._id === show._id) ? action._show : show)] }\r\n            \r\n        case 'REMOVE_SHOW':\r\n            return { ...state, show: state.show.filter(show => show._id !== action.showId) };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { movReducer,  } from './reducers/movReducer';\r\nimport { showReducer } from './reducers/showReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    movReducer,\r\n    showReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport history from './history';\nimport { Router } from 'react-router-dom';\nimport { store } from './store/store';\n\n\nimport './assets/styles/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}