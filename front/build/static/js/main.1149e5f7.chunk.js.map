{"version":3,"sources":["services/httpService.js","services/moviesService.js","cmps/NavBar.jsx","store/actions/movActions.js","services/tmdbService.js","history.js","cmps/MovieStrip.jsx","pages/Explore.jsx","pages/Shows.jsx","pages/Movies.jsx","App.js","reportWebVitals.js","store/reducers/movReducer.js","store/store.jsx","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","mov","movId","moviesService","addMov","getAllMovies","removeMov","NavBar","dispatch","useDispatch","useEffect","allMov","type","className","to","tmdbService","getMovie","query","createBrowserHistory","MovieStrip","btnAdd","btnRemove","onClick","_mov","history","push","_id","name","id","Explore","useState","update","setUpdate","refresh","searchVal","setSearchVal","Date","now","lastTime","setlastTime","que","setQue","movies","setMovies","then","setTimeout","value","onChange","ev","target","results","map","idx","doRefresh","Shows","Movies","moviesInState","useSelector","state","movReducer","App","connect","withRouter","exact","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1149e5f7.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        if (endpoint === 'undefined') { endpoint = '' }\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import { httpService } from './httpService'\r\n\r\nasync function addMov(mov) {\r\n    try {\r\n        const res = await httpService.post(`movie/add`, mov);\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n\r\n    }\r\n}\r\n\r\nasync function getAllMovies() {\r\n    try {\r\n        const res = await httpService.get(`movie/`);\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function removeMov(movId) {\r\n    try {\r\n        const res = await httpService.delete(`movie/${movId}`)\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const moviesService = {\r\n    addMov,\r\n    getAllMovies,\r\n    removeMov\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadMov } from \"../store/actions/movActions\";\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction _NavBar() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMov());\r\n  }, []);\r\n\r\n  // const test = useSelector((state) => state.movReducer.mov);\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"nav-bar ca\">\r\n\r\n      <h1>Cinema Now</h1>\r\n\r\n      <NavLink to=\"/\">\r\n        <p className=\"nav-btn\">Find Movies</p>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/movies\">\r\n        <p className=\"nav-btn\">Our Movies</p>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/shows\">\r\n        <p className=\"nav-btn\">Manage Shows</p>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NavBar = _NavBar\r\n","import { moviesService } from '../../services/moviesService';\r\n\r\nexport function loadMov() {\r\n    return async dispatch => {\r\n        try {\r\n            const allMov = await moviesService.getAllMovies();\r\n            dispatch({ type: 'LOAD_MOV', allMov });\r\n        } catch (err) {\r\n            console.log('SettingsActions: err in getAllMovies', err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function addMov(mov) {\r\n    return async dispatch => {\r\n        try {\r\n            const _mov = await moviesService.addMov(mov);\r\n            dispatch({ type: 'ADD_MOV', _mov })\r\n        } catch (err) {\r\n            console.log('SettingsActions: err in addMov', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function removeMov(movId) {\r\n    return async dispatch => {\r\n        try {\r\n            await moviesService.removeMov(movId);\r\n            dispatch({ type: 'REMOVE_MOV', movId });\r\n            console.log('removed');\r\n        } catch (err) {\r\n            console.log('AnnActions: err in removeMov', err);\r\n        }\r\n    };\r\n}\r\n","import { httpService } from './httpService'\r\n\r\nfunction getMovie(query) {\r\n    return httpService.get(`tmdb/${query}`);\r\n}\r\n\r\nexport const tmdbService = {\r\n    getMovie\r\n}","import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory()","import React  from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMov , removeMov } from '../store/actions/movActions'\r\nimport history from '../history';\r\n\r\nexport const MovieStrip = ({ mov, btnAdd, btnRemove }) => {\r\nconsole.log(mov);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"rb movie-strip\">\r\n            <div className=\"ral\">\r\n\r\n                <div className=\"add-button-col\">\r\n\r\n{/* ADD Button */}\r\n                    {btnAdd ? <button className=\"btn2 lnk-btn\" onClick={() => {\r\n                        dispatch(addMov(mov));\r\n                        history.push(\"/movies\");\r\n\r\n                    }\r\n                }>\r\n                        <i className=\"fas fa-plus\"></i>Add to cinema</button>\r\n                        : null}\r\n\r\n{/* REMOVE Button */}\r\n                    {btnRemove ? <button className=\"btn2 lnk-btn\" onClick={() => {\r\n                        dispatch(removeMov(mov._id));\r\n                        history.push(\"/movies\");\r\n\r\n                    }\r\n                    }>\r\n                        <i className=\"far fa-trash-alt\"  ></i>Remove</button>\r\n                        : null}\r\n\r\n                </div>\r\n\r\n                <p className=\"movie-title\">{mov.name}</p>\r\n            </div>\r\n            <p className=\"movie-id\">{mov.id}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tmdbService } from '../services/tmdbService'\r\nimport { MovieStrip } from '../cmps/MovieStrip'\r\n\r\n\r\nexport const Explore = () => {\r\n\r\n    const [update, setUpdate] = useState(1);\r\n    const refresh = () => {\r\n        setUpdate(update + 1);\r\n        console.log('refresh func activated');\r\n    }\r\n\r\n    const [searchVal, setSearchVal] = useState('fight club');\r\n    const [lastTime, setlastTime] = useState(Date.now());\r\n    const [que, setQue] = useState(0);\r\n    const [movies, setMovies] = useState();\r\n\r\n    useEffect(() => { // search field changed\r\n        if (searchVal) {\r\n            if ((Date.now() - lastTime) > 2000) { // if slow enough\r\n                tmdbService.getMovie(searchVal).then(res => { setMovies(res) }) // Do API call\r\n                setlastTime(Date.now());\r\n\r\n\r\n            } else {\r\n                setQue(que + 1);\r\n                setTimeout(function () {\r\n                    if (que === 1 || que < 1) {\r\n                        tmdbService.getMovie(searchVal).then(res => { setMovies(res) }) // Do API call\r\n                        setlastTime(Date.now());\r\n                        setQue(que - 1);\r\n\r\n                    }\r\n                }, 1000);\r\n            }\r\n\r\n        } // if searchVal\r\n    }, [searchVal]);\r\n\r\n    useEffect(() => {\r\n        console.log('update');\r\n    }, [update])\r\n\r\n\r\n    return (\r\n        <div className=\"page-general\">\r\n            <h2>Explore new movies</h2>\r\n            <div className=\"search-bar ral\">\r\n                <p>Search for new movies: </p>\r\n                <input className=\"input\"\r\n                    value={searchVal}\r\n                    type=\"text\"\r\n                    onChange={ev => { setSearchVal(ev.target.value); }} />\r\n            </div>\r\n\r\n            { movies ?\r\n                movies.results.map((mov, idx) => {\r\n                    return <MovieStrip\r\n                        key={idx}\r\n                        mov={mov}\r\n                        btnAdd={true}\r\n                        btnRemove={false}\r\n                        doRefresh={refresh}\r\n                    />\r\n                }) : null}\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Shows = () => {\r\n    return (\r\n        <div className=\"page-general\">\r\n            <h1>Shows</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MovieStrip } from '../cmps/MovieStrip'\r\n\r\nexport const Movies = () => {\r\n\r\n\r\n    const moviesInState = useSelector((state) => state.movReducer.mov);\r\n\r\n    return (\r\n        <div className=\"page-general\">\r\n            <h1>Movies</h1>\r\n            { moviesInState ?\r\n                moviesInState.map((mov, idx) => { return <MovieStrip key={idx} mov={mov} btnAdd={false} btnRemove={true}  /> }) : null}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { NavBar } from \"./cmps/NavBar.jsx\";\nimport { Explore } from './pages/Explore';\nimport { Shows } from './pages/Shows';\nimport { Movies } from './pages/Movies';\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\nconst _App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"outter-container\">\n        <div className=\"inner-container\">\n          <NavBar />\n\n          <Switch>\n            <Route exact component={Explore} path={\"/\"} />\n            <Route exact component={Shows} path={\"/shows\"} />\n            <Route exact component={Movies} path={\"/movies\"} />\n\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const App = connect(null, null)(withRouter(_App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    mov: []\r\n};\r\n\r\nexport function movReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'LOAD_MOV':\r\n            return { mov: action.allMov };\r\n\r\n        case 'ADD_MOV':\r\n            return { ...state, mov: [...state.mov, state.mov.map(mov => (action._mov._id === mov._id) ? action._mov : mov)] }\r\n            \r\n        case 'REMOVE_MOV':\r\n            return { ...state, mov: state.mov.filter(mov => mov._id !== action.movId) };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { movReducer } from './reducers/movReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    movReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport history from './history';\nimport { Router } from 'react-router-dom';\nimport { store } from './store/store';\n\n\nimport './assets/styles/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}